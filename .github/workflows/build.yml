name: Build

on:
  push:
    branches: [develop]

jobs:
  client:
    name: Client (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [nightly]
    env:
      RUST_BACKTRACE: full
      RUSTV: ${{ matrix.rust }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --bin client
      - uses: actions/upload-artifact@v3
        with:
          name: client-${{ matrix.os }}
          path: target/release/client
  runner:
    name: Runner (linux)
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
      RUSTV: nightly
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Cargo Cache
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
            ${{ runner.os }}-cargo
      - name: Cargo Target Cache
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-${{ hashFiles('Cargo.toml') }}
            ${{ runner.os }}-cargo-target
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --bin runner
      - uses: actions/upload-artifact@v3
        with:
          name: runner-linux
          path: target/release/runner
